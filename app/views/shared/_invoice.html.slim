.text-center = image_tag 'logo-header.png'

.table-responsive
  table.table-checkout style="margin-bottom:0"
    tbody
      tr
        td colspan="4" valign="top" alrign="left"
          p
            - if order.instance_of? StripeOrder
            - if order.instance_of? FlyBuyOrder
              div
                | Transaction Id #
                = order.synapse_transaction_id
          div Date: #{order.created_at.strftime('%m-%d-%Y')}


      tr
        td colspan="2" valign="top"
          h4.text-uppercase Shipping Address:
          br
          dl
            dt Name:
            dd= order.buyer.name

            - if !order.buyer.addresses[0].nil?
              dt Address:
              dd= order.buyer.addresses[0].line1 + (order.buyer.addresses[0].line2 || "")

              dt City:
              dd= order.buyer.addresses[0].city

              dt State:
              dd= order.buyer.addresses[0].state

              dt Country:
              dd= order.buyer.addresses[0].country

              dt Postal-Code:
              dd= order.buyer.addresses[0].zip

            dt Phone:
            dd= order.buyer.phone

        td colspan="2" valign="top"
          h4.text-uppercase Seller Information
          br
          dl
            dt Name:
            dd= order.seller.name

            - if !order.seller.addresses[0].nil?
              dt Country:
              dd= order.seller.addresses[0].country

            dt Phone:
            dd= order.seller.phone

  table.table-checkout
    thead
      tr
        th description
        th qty
        th price
        th amount
    tbody
      tr
        td= order.product.name
        td= order.count
        td  #{number_to_currency(number_with_precision(order.unit_price, precision: 2, delimiter: ''))}
        td  #{number_to_currency(number_with_precision(order.count * order.unit_price, precision: 2, delimiter: ''))}

      tr
        td colspan="3" #{number_with_precision(order.rebate, precision: 2, delimiter: '')}% rebate for purchasing #{order.count} pcs
        - if order.instance_of? FlyBuyOrder
          td - #{number_to_currency(number_with_precision(order.rebate_price, precision: 2, delimiter: ''))}
        - else
          td - #{number_to_currency(number_with_precision(get_amount_for_rebate(order), precision: 2, delimiter: ''))}

      tr
      - if order.instance_of?(FlyBuyOrder)
        - if user == order.seller
          tr
            td colspan="3" Toadlane Fee (#{order.get_toadlane_fee}% - #{Fee::FlyBuyReductionFeeAmount}% reduced)
            td #{number_to_currency(number_with_precision(order.fee, precision: 2, delimiter: ''))}
          tr
            td colspan="3" Seller Fees #{order.seller_fees_percent}%
            td - #{number_to_currency(number_with_precision(order.seller_fees_amount, precision: 2, delimiter: ''))}
        - elsif user == order.buyer
          tr
            td colspan="3" Toadlane Fee (#{order.get_toadlane_fee}% - #{Fee::FlyBuyReductionFeeAmount}% reduced)
            td #{number_to_currency(number_with_precision(order.fee, precision: 2, delimiter: ''))}
      - else
        tr
          td colspan="3" Shipping
          td  #{number_to_currency(number_with_precision(order.shipping_cost, precision: 2, delimiter: ''))}

      tr
        td.no-border colspan="2"
        td.text-center: b.text-uppercase Total:
        td: b  
          - if order.instance_of?(FlyBuyOrder)
            - if user == order.seller
              = number_to_currency(number_with_precision(order.total - order.seller_fees_amount, precision: 2, delimiter: '')) if order.seller_fees_amount.present?
            - elsif user == order.buyer
              = number_to_currency(number_with_precision(order.total + order.fee, precision: 2, delimiter: ''))
          - else
            = number_to_currency(number_with_precision(order.total, precision: 2, delimiter: ''))
          
  - if order.instance_of? GreenOrder
    table.table-checkout style="margin-top: 20px;"
      thead
        tr
          th Check Number
          th Check ID
          th Result Description
          th Amount
      tbody
        tr
          td
            = order.check_number
          td
            = order.check_id
          td
            | Check Accepted
          td
            - if order.total > GreenOrder::MAX_AMOUNT
              = GreenOrder::MAX_AMOUNT
            - else
              = order.total
        - order.green_checks.each do |gc|
          tr
            td
              = gc.check_number
            td
              = gc.check_id
            td
              = gc.result_description
            td
              = gc.amount

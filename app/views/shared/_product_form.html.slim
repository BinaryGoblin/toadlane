= form_for [ controller.class.name.split("::").first.underscore.to_sym, setup_product(@product)], :html => { multipart: true, class: "product_form_partial product_#{params["action"]}" } do |f|
  - if @product.errors.any?
    .error-explanation
      h5= "Error:"
      ul
        - @product.errors.full_messages.each do |message|
          li = message
  - elsif @errors.present?
    .error-explanation
      / h5= "Error:"
      ul
        li = @errors
  - elsif flash[:error].present?
    .error-explanation
      = flash[:error]


  - if current_user.has_role?(:admin) or current_user.has_role?(:superadmin)
    - if @status_actions
      .form-group
        = f.label :status_action, 'Status Action:', class: 'required'
        = f.select :status_action, @status_actions, {}, data: { behavior: 'Select' }

        - assignable_users = assignable_users_collection
        - if StripeOrder.where(:product_id => @product.id).empty?
          = f.label :user_id, 'Product owner:', class: 'required'
          = f.select :user_id, options_from_collection_for_select(assignable_users, 'id', 'name', @product.user_id || 0), {}, data: { behavior: 'Select' }
        - else
          = f.label :user_id, 'Product owner (locked after first sale):', class: 'required'
          = f.select :user_id, options_from_collection_for_select(assignable_users, 'id', 'name', @product.user_id || 0), {}, {disabled: true, data: { behavior: 'Select' }}
    - else
      .form-group
        - assignable_users = assignable_users_collection
        - if StripeOrder.where(:product_id => @product.id).empty?
          = f.label :user_id, 'Product owner:', class: 'required'
          = f.select :user_id, options_from_collection_for_select(assignable_users, 'id', 'name', @product.user_id || 0), {}, data: { behavior: 'Select' }
        - else
          = f.label :user_id, 'Product owner (locked after first sale):', class: 'required'
          = f.select :user_id, options_from_collection_for_select(assignable_users, 'id', 'name', @product.user_id || 0), {}, {disabled: true, data: { behavior: 'Select' }}

    hr

  .row
    .col-md-6
      .form-group
        = f.label :name, 'Product name:', class: 'required'
        = f.text_field :name, class: 'form-control'

      .form-group
        = f.label :sku, 'Product sku:'
        = f.text_field :sku, class: 'form-control'

      .form-group
        = f.label :main_category, 'Main category:', class: 'required'
        = f.select :main_category, options_from_collection_for_select(main_categories, :id, :name, f.object.main_category), {}, data: { behavior: 'Select', subcategory: '#sub_categories' }, placeholder: 'Select the main category...'

      .form-group
        label Additional categories:
        select#sub_categories name="product[product_categories_attributes][][category_id]" placeholder="Select the sub category..." style="display:none" multiple="true"
          - @product.categories.each do |category|
            option value="#{category.id}" selected=""= category.name

      .form-group
        = f.label :description, 'Description:'
        = f.text_area :description, class: 'form-control', placeholder: 'Write something about your product...', maxlength: '1000'

      .row.row-top-padding-10
        .col-md-6
          .form-group
            label.required OFFER valid from:
            .input-group.date#start-date
              = f.text_field :start_date, class: "form-control"
              span.input-group-addon.group-addon-date
                span.glyphicon.glyphicon-calendar
              p.product-start-date-error
        .col-md-6
          .form-group
            label.required OFFER valid until:
            .input-group.date#end-date
              = f.text_field :end_date, class: "form-control"
              span.input-group-addon.group-addon-date
                span.glyphicon.glyphicon-calendar
              p.product-end-date-error
      .row.row-top-padding-10
        .col-md-6
          .form-group
            = f.label :unit_price, 'Retail price (USD):', class: 'required'
            span.input-group-addon.group-addon-price $
            = f.number_field :unit_price, in: 0...1000000, step: "any", class: 'form-control width-60 right-rounded-corner'
        .col-md-6
          .form-group
            = f.label :amount, 'Amount in Stock:', class: 'required number'
            = f.number_field :amount, class: 'form-control width-70'
      .row.row-top-padding-10
        .col-md-12
          .form-group
            = f.label :sold_out, 'Number Purchased:'
            = f.number_field :sold_out, class: 'form-control width-33'

    .col-md-6
      .clearfix
        .status
          = f.label :status, 'Product status:'
          .checkbox: label
            = f.check_box :status
            | Is Active

        .status_action
          = f.hidden_field :status_characteristic, :value => 'sell'

      .product-images
        label Photos:
        .product-form-photos data-behavior="UploadImages" data-options='{"template":"#template-select-image","btnAdd":"#add_photo","deleteImage":".delete-image"}'
          - if @product.images.present?
            - @product.images.each_with_index do |item, index|
              .item: .photo
                .image-tag style="background:url(#{item.image(:small)})"
                a.delete-image= fa_icon 'trash-o', text: 'Delete'
                = hidden_field_tag "product[images_attributes][#{index}][id]", "#{item.id}"
                = hidden_field_tag "product[images_attributes][#{index}][_destroy]", false, class: 'item_ds'

            - if 4 - @product.images.count > 0
              - (1..4-@product.images.count).each_with_index do |value, index|
                .item.new
                  .photo
                    a.delete-image= fa_icon 'trash-o', text: 'Delete'
                  .select
                    span Select photo
                    = file_field_tag "product[images_attributes][#{index + @product.images.count}][image]", accept: 'image/*'

          - else
            - (1..4).each_with_index do |value, index|
              .item.new
                .photo
                  a.delete-image= fa_icon 'trash-o', text: 'Delete'
                .select
                  span Select photo
                  = file_field_tag "product[images_attributes][#{index}][image]", accept: 'image/*'

        .clearfix
          #add_photo.btn.btn-primary Add photo item
          span.photo-ex Supported extensions: jpg, png, gif.<br>Max. upload file size 5MB.

        script#template-select-image type="text/template"
          .item.new
            .photo
              a.delete-image= fa_icon 'trash-o', text: 'Delete'
            .select
              span Select photo
              input type="file" name="product[images_attributes][][image]" accept="image/*"
      .product-certificates.margin-top-20
        label Upload product information:
        .product-form-photos data-behavior="UploadImages" data-options='{"template":"#template-select-certificate","btnAdd":"#add_certificate","deleteImage":".delete-certificate"}'
          - if @product.certificates.present?
            - @product.certificates.each_with_index do |item, index|
              .item: .photo
                .image-tag
                  = item.filename
                a.delete-certificate= fa_icon 'trash-o', text: 'Delete'
                = hidden_field_tag "product[certificates_attributes][#{index}][id]", "#{item.id}"
                = hidden_field_tag "product[certificates_attributes][#{index}][_destroy]", false, class: 'item_ds'

            - if 4 - @product.certificates.count > 0
              - (1..4-@product.certificates.count).each_with_index do |value, index|
                .item.new
                  .photo
                    a.delete-certificate= fa_icon 'trash-o', text: 'Delete'
                  .select
                    span Select document
                    = file_field_tag "product[certificates_attributes][#{index + @product.certificates.count}][uploaded_file]", accept: '.pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, image/jpg, image/jpeg, image/png, image/gif'

          - else
            - (1..4).each_with_index do |value, index|
              .item.new
                .photo
                  a.delete-certificate= fa_icon 'trash-o', text: 'Delete'
                .select
                  span Select document
                  = file_field_tag "product[certificates_attributes][#{index}][uploaded_file]", accept: '.pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, image/jpg, image/jpeg, image/png, image/gif'

        .clearfix
          #add_certificate.btn.btn-primary Add information
          span.photo-ex Supported extensions: jpg, png, gif, PDF, DOC, DOCX, XLS.<br>Max. upload file size 2MB.

        script#template-select-certificate type="text/template"
          .item.new
            .photo
              a.delete-certificate= fa_icon 'trash-o', text: 'Delete'
            .select
              span Select document
              input type="file" name="product[certificates_attributes][][uploaded_file]" accept=".pdf, application/msword, application/vnd.openxmlformats-officedocument.wordprocessingml.document, application/vnd.ms-excel,application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, image/jpg, image/jpeg, image/png, image/gif"

      .form-group.product-videos
        label Upload Videos:
        .product-form-photos data-behavior="UploadImages" data-options='{"template":"#template-select-video","btnAdd":"#add_video","deleteImage":".delete-video"}'
          - if @product.videos.present?
            - @product.videos.each_with_index do |item, index|
              .item: .photo
                .image-tag style="background:url(#{item.video(:small)})"
                a.delete-video= fa_icon 'trash-o', text: 'Delete'
                = hidden_field_tag "product[videos_attributes][#{index}][id]", "#{item.id}"
                = hidden_field_tag "product[videos_attributes][#{index}][_destroy]", false, class: 'item_ds'

            - if 4 - @product.videos.count > 0
              - (1..4-@product.videos.count).each_with_index do |value, index|
                .item.new
                  .photo
                    a.delete-video= fa_icon 'trash-o', text: 'Delete'
                  .select
                    span Select video
                    = file_field_tag "product[videos_attributes][#{index + @product.videos.count}][video]", accept: 'video/*, video/3gpp, video/x-flv, video/mpeg, .m2v'

          - else
            - (1..4).each_with_index do |value, index|
              .item.new
                .photo
                  a.delete-video= fa_icon 'trash-o', text: 'Delete'
                .select
                  span Select video
                  = file_field_tag "product[videos_attributes][#{index}][video]", accept: 'video/*, video/3gpp, video/x-flv, video/mpeg, .m2v'

        .clearfix
          #add_video.btn.btn-primary Add video
          span.photo-ex Supported extensions: MP4, AVI, 3GP, FLV, M4V, MOV, M2V.<br>Max. upload file size 5MB.

        script#template-select-video type="text/template"
          .item.new
            .photo
              a.delete-video= fa_icon 'trash-o', text: 'Delete'
            .select
              span Select video
              input type="file" name="product[videos_attributes][][video]" accept="video/*, video/3gpp, .mkv, video/x-flv, video/3gpp2, video/mpeg, .m2v"
  hr
  label Pricebreaks:
  ul.pricebreaks
    = f.fields_for :pricebreaks do |builder|
      li.pricebreak.item
        .index
          = builder.index + 1
        .form-group
          = builder.label :price
          = builder.number_field :price, class: 'form-control'

        .form-group
          = builder.label :quantity
          = builder.number_field :quantity, class: 'form-control'

        span.btn.btn-default.remove data-index=builder.index = fa_icon 'trash-o'
        = builder.hidden_field :_destroy

    li.add-pricebreak.item data-behavior="PriceBreaks"= fa_icon 'plus', text: 'Add another Product Price'

  script#template-pricebreak type="text/template"
    li.pricebreak.item
      .index 2
      .form-group
        = label_tag :price
        = number_field_tag :price, nil, class: 'form-control'

      .form-group
        = label_tag :quantity
        = number_field_tag :quantity, nil, class: 'form-control'

      span.btn.btn-default.remove= fa_icon 'trash-o'

  hr

  label Seller Group:
  .warning Note: This feature is only available for Fly & Buy sellers.
  .row
    .col-md-6
      .form-group
        = f.fields_for :group do |group_form|
          = group_form.label :name, 'Group Name:'
          = group_form.text_field :name, class: 'form-control'
          = group_form.hidden_field :_destroy

  label Add Additional Member:
  .warning Note: The creator of this group is by default assigned as a group admin
  p.warning.additional-seller-fee-exceeded-error
  ul.sellergroups
    = f.fields_for :group do |group_form|
      = group_form.fields_for :group_sellers do |group_sellers_form|
        li.sellergroup.item
          .index
            = group_sellers_form.index + 1
          .form-group.add-seller-block.select-seller-group
            label Name:
            = group_sellers_form.collection_select :user_id, get_all_user_except_current_added_user(current_user, @product), :id, :label_for_select, { include_blank: true}, { class: 'chosen-select form-control', :multiple=>false, :data => { :placeholder => ' ' }}
            = group_sellers_form.hidden_field :_destroy


          .form-group.set-commision
            label set per unit commission:
            = group_sellers_form.number_field :fee, class: 'form-control set-commission-text-box'

          .form-group.select-additional-seller-role
            label Role:
            = group_sellers_form.collection_select :role_id, get_additional_seller_roles, :id, :name, { include_blank: true}, { class: 'form-control', :multiple=>false, :data => { :placeholder => ' ' }}

          span.btn.btn-default.remove data-index=group_sellers_form.index = fa_icon 'trash-o'
          = group_sellers_form.hidden_field :_destroy

    li.add-seller.item data-fieldname="product[group_attributes][group_sellers_attributes][" data-behavior="AddSeller"= fa_icon 'plus', text: 'Add another Additional Seller'

  script#template-addseller type="text/template"
    li.sellergroup.item
      .index 1
      .form-group.add-seller-block.select-seller-group
        label Name:
        = select_tag 'product[group_attributes][group_sellers_attributes][0][user_id]',
            options_from_collection_for_select(get_all_user_except_current_added_user(current_user, @product), :id, :label_for_select), { include_blank: true,class: 'chosen-select form-control', :multiple=>false, :data => { :placeholder => ' ' }}

      .form-group.set-commision
        label set per unit commission:
        = number_field_tag 'product[group_attributes][group_sellers_attributes][0][fee]', '', class: 'form-control set-commission-text-box'

      .form-group.select-additional-seller-role
        label Role:
        = select_tag 'product[group_attributes][group_sellers_attributes][0][role_id]',
            options_from_collection_for_select(get_additional_seller_roles, :id, :name), { include_blank: true, class: 'form-control', :multiple=>false, :data => { :placeholder => ' ' }}

      span.btn.btn-default.remove= fa_icon 'trash-o'
  hr
    .dimensions
      .dimensions-label
        label Shipping Dimensions:
      .dimensions-fields
        div
          = f.label :dimension_width, 'Width (inches):'
          = f.text_field :dimension_width, class: 'form-control'
        div
          = f.label :dimension_height, 'Height (inches):'
          = f.text_field :dimension_height, class: 'form-control'
        div
          = f.label :dimension_depth, 'Depth (inches):'
          = f.text_field :dimension_depth, class: 'form-control'
        div
          = f.label :dimension_weight, 'Weight (lbs):'
          = f.text_field :dimension_weight, class: 'form-control'

  label Shipping Estimates:
  ul.estimates
    = f.fields_for :shipping_estimates do |builder|
      - if params[:action] == 'new' || builder.object.persisted?
        li.estimate
          .index = builder.index + 1
          .estimate-type
            = builder.label :type, 'Shipping Type:'
            = builder.select :type, ShippingEstimate.select_options, {}, class: 'form-control'

          .estimate-cost
            = builder.label :cost, 'Cost (USD):'
            = builder.text_field :cost, class: 'form-control'

          .estimate-description
            = builder.label :description, 'Description:'
            = builder.text_field :description, class: 'form-control'

          span.btn.btn-default.remove data-index=builder.index = fa_icon 'trash-o'
          = builder.hidden_field :_destroy

    li.add-estimate data-behavior="ShippingEstimates"= fa_icon 'plus', text: 'Add another shipping estimate'

  script#template-shippingestimate type="text/template"
    li.estimate
      .index 2
      .estimate-type
        label Shipping Type:
        = select_tag "product[shipping_estimates_attributes][][type]", options_for_select(ShippingEstimate.select_options), class: 'form-control shippingType'
      .estimate-cost
        label Cost (USD):
        input.form-control.cost type="text" name="product[shipping_estimates_attributes][][cost]"

      .estimate-description
        label Description:
        input.form-control.description type="text" name="product[shipping_estimates_attributes][][description]"

      span.btn.btn-default.remove= fa_icon 'trash-o'

  hr
  .form-group
    label Sell Product using::
    .input-group
      = f.select :default_payment, options_for_select(current_user.available_payments,
                          :selected => @product.default_payment),
                         {:include_blank => 'Choose Payment Option'},
                         {:required => controller_path == "admin/products" ? false : true,
                          :class => 'form-control'}

  .insert_inspection_dates style="#{get_style(@product)}"
    .form-group
      .checkbox: label
        = f.check_box :negotiable, :checked => @product.negotiable
        span
          Allow buyer to suggest alternative inspection date
    label Inspection Dates:
    ul.inspectiondates
      = f.fields_for :inspection_dates do |builder|
        li.inspectiondate.item
          .index
            = builder.index + 1
          .form-group.width-auto
            .input-group.date.inspection-date
              label &nbsp;
              = builder.text_field :date, class: "form-control inspection-date"
              span.input-group-addon.group-addon-date
                span.glyphicon.glyphicon-calendar
          span.btn.btn-default.remove data-index=builder.index = fa_icon 'trash-o'
          = builder.hidden_field :_destroy

      li.add-inspectiondate.item data-behavior="InspectionDate"= fa_icon 'plus', text: 'Add another Inspection Date'

    script#template-inspectiondate type="text/template"
      li.inspectiondate.item
        .index 2
        .form-group.width-auto
          .input-group.date.inspection-date
            label &nbsp;
            = text_field_tag 'product[inspection_dates_attributes][0][date]', nil, class: "form-control inspection-date"
            span.input-group-addon.group-addon-date
              span.glyphicon.glyphicon-calendar
        span.btn.btn-default.remove= fa_icon 'trash-o'


  .footer-actions
    = f.button fa_icon('check', text: 'Save & close'), value: 'close', class: 'btn btn-success pull-right'
    = f.button fa_icon('save', text: 'Save & add new'), value: 'new', class: 'btn btn-default pull-right'
    = f.button fa_icon('plus', text: 'Save & stay edit'), value: 'edit', class: 'btn btn-default pull-right'
    = link_to fa_icon('trash-o', text: 'Delete this product'), dashboard_product_path(@product.id), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-default pull-left' if @product.id?

= render partial: '/dashboard/products/popup_to_verify_payment_as_fly_buy', locals: { product: @product}
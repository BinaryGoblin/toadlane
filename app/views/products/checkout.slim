.wrap-sm.margin-top-30.vp-calculation-checkout data-options='{"pricebreaks":#{@product.pricebreaks.collect { |p| { quantity: (p.quantity - 1), price: p.price } }.to_json},"maxquantity":#{@data[:available_product].present? ? @data[:available_product].to_s : '"Infinity"'}}'
  h1
    | Checkout :: "#{@product.name}"
  - if flash[:alert].present?
    .alert.alert-danger.margin-top-20 role="alert"
      em
        = flash[:alert]
  - if !flash[:error].nil?
    .error-explanation
      - if flash[:error].kind_of?(Array)
        - flash[:error].each do |error|
          = error
      - else
        = flash[:error]
  .row.margin-top-20
    .col-md-12
      table.table
        thead
          tr
            th description
            th qty
            th price
            th amount

        tbody
          = render partial: 'products/shared/order_details', locals: { product: @product, armor_order: @armor_order, data: @data }

    .col-md-12.checkout-payment-gateway
      - if @armor_order.uri.present?
          = render partial: 'products/shared/payment_instruction_pop_up', locals: { armor_order: @armor_order }

          = link_to "View Order", dashboard_order_path(@armor_order, type: 'armor' ), class: "btn btn-primary pull-right"
      - else
        - if @product.available_payments.count > 2
          h2
            | Choose a desired Payment Gateway
          ul.nav.nav-tabs role="tablist"
            li role="presentation" class=('active' if !@green_order.routing_number.present?)
              a aria-controls="stripe" data-toggle="tab" href="#stripe" role="tab"  Stripe
            li role="presentation" class=('active' if @green_order.routing_number.present?)
              a aria-controls="green" data-toggle="tab" href="#green" role="tab"  eCheck
            li role="presentation" class=('active' if @product.armor_only_present?)
              a aria-controls="armor" data-toggle="tab" href="#armor" role="tab"  Armor
            li role="presentation"
              a aria-controls="amg" data-toggle="tab" href="#amg" role="tab" Credit Card
        - elsif @product.available_payments.count > 1
          // TODO:: FIX THIS
          h2
            | Choose a desired Payment Gateway
          ul.nav.nav-tabs role="tablist"
            - @product.available_payments.each do |payment|
              - if payment == "Credit Card"
                li role="presentation" class=('active' if !@green_order.routing_number.present?)
                  a aria-controls="stripe" data-toggle="tab" href="#stripe" role="tab"  Stripe (Credit Card)
              - elsif payment == "eCheck"
                li role="presentation" class=('active' if @green_order.routing_number.present?)
                  a aria-controls="green" data-toggle="tab" href="#green" role="tab"  Green (eCheck)
              - else
                li role="presentation" class=('active' if @product.armor_only_present?)
                  a aria-controls="armor" data-toggle="tab" href="#armor" role="tab"  Armor
                li role="presentation"
                  a aria-controls="amg" data-toggle="tab" href="#amg" role="tab" Credit Card

      .tab-content
        - if @product.stripe_present?
          #stripe.tab-pane role="tabpanel" class=('active' if !@green_order.routing_number.present?)
            = render partial: 'products/shared/stripe_payment_tab', :locals => { stripe_order: @stripe_order,
                                                                    user: current_user,
                                                                    data: @data,
                                                                    product: @product}
        - if @product.green_present?
          #green.tab-pane role="tabpanel" class=('active' if (@product.green_only_present? || @green_order.routing_number.present?))
            = render partial: 'products/shared/green_payment_tab', :locals => { green_order: @green_order,
                                                                    user: current_user,
                                                                    product: @product}
        - if @product.amg_present?
          #amg.tab-pane role="tabpanel"
            = form_for(@amg_order, remote: true) do |f|
              -if current_user && !current_user.addresses.nil?
                table.table data-behavior="assignShippingAddress"
                  thead
                    tr
                      th shipping address
                  tbody
                    - amg_shipping_addresses = Address.where(:user => current_user).order('created_at')
                    = f.collection_radio_buttons(:address_id, amg_shipping_addresses, :id, :get_inline_address) do |b|
                      tr
                        td
                          = b.label { b.radio_button(:"data-behavior" => "AssignShipping", :"checked" => (b.object.id == amg_shipping_addresses.first.id)) + b.text }
                    tr
                      td
                        = radio_button 'amg_order', :address_id, "-1", default: true, 'data-behavior' => "AssignShipping", id: 'amg_order_address_id__1'
                        = label :address_id, " Enter new address", for: 'amg_order_address_id__1'
              table.table
                - if !@product.shipping_estimates.nil?
                  thead
                    tr
                      th shipping method
                  tbody
                    - amg_shipping_estimates = ShippingEstimate.where(:product => @product).order('created_at')
                    = f.collection_radio_buttons(:shipping_estimate_id, amg_shipping_estimates, :id, :get_label) do |b|
                      tr
                        td
                          = b.label { b.radio_button(:"data-behavior" => "EstimateShipping", :"data-cost" => b.object.cost, :"data-type" => b.object.type, :"checked" => (b.object.id == amg_shipping_estimates.first.id)) + b.text }
              .amgDetails.form-horizontal
                .form-group
                  = f.label :first_name, 'First Name *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = f.text_field :first_name, class: 'form-control', :value => "#{current_user.try(:name).try(:split, " ").try(:first)}", required: true
                .form-group
                  = f.label :last_name, 'Last Name *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = f.text_field :last_name, class: 'form-control', :value => "#{current_user.try(:name).try(:split, " ").try(:last)}", required: true
                - amg_address = current_user.try(:addresses).try(:last)
                - f.object.address_country = amg_address.try(:country)
                .form-group
                  = f.label :address_country, "Country *", class: "control-label col-sm-4"
                  .col-sm-8
                    = f.select :address_country, region_options_for_select(only_us_and_canada, f.object.address_country), {prompt: 'Please select a country'}, class: 'form-control', required: true
                .form-group
                  = f.label :address_state, "State *", class: "control-label col-sm-4"
                  .col-sm-8
                    = render partial: 'products/subregion_select', locals: {parent_region: f.object.address_country, user_state: get_state(amg_address.try(:state)), parent_object_sym: "amg_order"}
                .form-group
                  = f.label :address_city, 'City *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = f.text_field :address_city, class: 'form-control', :value => "#{amg_address.try(:city)}", required: true
                .form-group
                  = f.label :address_zip, 'Zip *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = f.text_field :address_zip, class: 'form-control', :value => "#{amg_address.try(:zip)}", required: true
                .form-group
                  = f.label :address1, 'Address1 *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = f.text_field :address1, class: 'form-control', :value => "#{amg_address.try(:line1)}", required: true
                .form-group
                  = label_tag 'billing-cc-number', 'Billing CC Number: *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = text_field_tag 'billing-cc-number', nil, class: 'form-control', required: true
                .form-group
                  = label_tag 'billing-cc-exp', 'Billing CC Exp: *', class: 'control-label col-sm-4'
                  .col-sm-8
                    = text_field_tag 'billing-cc-exp', nil, class: 'form-control', required: true
                    p.help-block Your CC Expiry date in the format MMYY, MM/YY or MM-YY.
                .form-group
                  = label_tag 'billing-cvv', 'Billing CVV:', class: 'control-label col-sm-4'
                  .col-sm-8
                    = text_field_tag 'billing-cvv', nil, class: 'form-control'
              .payment-button.text-right
                = f.hidden_field :product_id, :value => @product.id
                = f.hidden_field :unit_price, :value => number_with_precision(@product.unit_price, precision: 2, delimiter: '')
                = f.hidden_field :total, :value => number_with_precision(@product.unit_price, precision: 2, delimiter: '')
                = f.hidden_field :count, :value => '1'
                = f.hidden_field :summary, :value => 'products to ' + @product.status_characteristic
                = f.hidden_field :description, :value => strip_tags(@product.description)

                = f.hidden_field :fee, :value => '0'
                = f.hidden_field :rebate, :value => '0'
                = f.hidden_field :rebate_percent, :value => '0'
                = f.hidden_field :shipping_cost, :value => '0'

                - if current_user
                  - if @product.status_characteristic == 'sell'
                    = f.hidden_field :seller_id, :value => @product.user.id
                    = f.hidden_field :buyer_id, :value => current_user.id || 0

                    button.btn.btn-default type="button" data-dismiss="modal" Cancel

                    = f.submit 'Place Order', class: "btn btn-primary"

                  - else
                    = f.hidden_field :seller_id, value: current_user.id
                    = f.hidden_field :buyer_id, value: @product.user.id

                    = f.submit 'Place Order', class: "btn btn-primary"
        - if @product.armor_present?
          #armor.tab-pane role="tabpanel" class=('active' if @product.armor_only_present?)
            = render partial: 'products/shared/armor_payment', :locals => { armor_order: @armor_order,
                                                                    armor_profile: @armor_profile,
                                                                    user: current_user,
                                                                    data: @data,
                                                                    product: @product}


= render partial: 'products/shared/set_inspection_date_by_buyer', :locals => { product: @product, data: @data, armor_order: @armor_order }

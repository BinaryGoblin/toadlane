- if product.default_payment_promisepay?
  tr
    td= product.name
    td.stripe-quantity =promise_order.count
    td data-unit-price="#{number_to_currency(promise_order.unit_price)}"  #{number_to_currency(promise_order.unit_price)}
    td <span class="stripe-unit-total">#{number_to_currency(get_subtotal(promise_order.unit_price, promise_order.count))}</span>

  tr
    td colspan="3" <span class="stripe-rebate">#{promise_order.rebate_percent}</span>% rebate for purchasing <span class="stripe-quantity">#{promise_order.count}</span> pcs
    td -<span class="stripe-rebate-price">#{number_to_currency(promise_order.rebate_price)}</span>

  tr
    - if product.default_payment_armor?
      td colspan="3" Toadlane Fee <span class="calc-fees"></span>
    - else
      td colspan="3" Toadlane Fee (<span class="calc-fees">#{data[:fee]}</span>%)
    td  <span class="stripe-fees-price">#{number_to_currency(promise_order.fee)}</span>

  tr
    td Shipping Estimate
    td.stripe_quantity =promise_order.count
    td  <span class="calc-shipping" data-type="PerUnit">#{number_to_currency(promise_order.shipping_cost)}</span>
    td  <span class="stripe-shipping-price">#{number_to_currency(get_shipping_cost(promise_order.count,promise_order.shipping_cost))}</span>

  tr
    td.no-border colspan="2"
    td.text-center: b.text-uppercase Total:
    td: b  <span class="stripe-total">#{number_to_currency(promise_order.amount)}</span>

- else

  tr
    td= product.name
    td.stripe-quantity =data[:quantity]
    td data-unit-price="#{number_with_precision(product.unit_price, precision: 0, delimiter: '')}" #{number_to_currency(product.unit_price)}
    td $ <span class="stripe-unit-total">#{number_with_precision(get_subtotal(product.unit_price, data[:quantity]), precision: 2, delimiter: '')}</span>

  tr
    td colspan="3" <span class="stripe-rebate">#{data[:rebate_percent]}</span>% rebate for purchasing <span class="stripe-quantity">#{data[:quantity]}</span> pcs
    td -$ <span class="stripe-rebate-price">#{data[:rebate]}</span>

  tr
    / TODO:: Fee is stated as $100 until fee algorithm is added
    - if product.default_payment_armor?
      td colspan="3" Toadlane Fee <span class="calc-fees"></span>
    - else
      td colspan="3" Toadlane Fee (<span class="calc-fees">#{data[:fee]}</span>%)
    td $ <span class="stripe-fees-price">#{data[:fee_amount]}</span>

  tr
    td Shipping Estimate
    td.stripe_quantity =data[:quantity]
    td $ <span class="calc-shipping" data-type="PerUnit">#{data[:shipping_cost]}</span>
    td $ <span class="stripe-shipping-price">#{number_with_precision(get_shipping_cost(data[:quantity],data[:shipping_cost]), precision: 2, delimiter: '')}</span>

  tr
    td.no-border colspan="2"
    td.text-center: b.text-uppercase Total:
    td: b $ <span class="stripe-total">#{number_with_precision(data[:total], precision: 2, delimiter: '')}</span>

- company_doc_verified = fly_buy_profile.present? && fly_buy_profile.company_doc_verified? ? true : false
- user_doc_verified = fly_buy_profile.present? && fly_buy_profile.user_doc_verified? ? true : false
- user_bank_details_verified = fly_buy_profile.present? && fly_buy_profile.bank_details_verified? ? true : false
- show_user_doc = fly_buy_profile.present? && fly_buy_profile.profile_type.present? && ['tier_2', 'tier_3'].include?(fly_buy_profile.profile_type) ? 'show' : 'hide'
- show_swift_code = fly_buy_profile.present? && fly_buy_profile.outside_the_us? ? 'show' : 'hide'

- physical_doc_text = nil
- if fly_buy_profile.present? && fly_buy_profile.profile_type.present?
  - case fly_buy_profile.profile_type
  - when 'tier_2'
    - physical_doc_text = 'Address Proof:'
  - when 'tier_3'
    - physical_doc_text = 'Bank Statement:'

- unless company_doc_verified
  .companyInformation
    h4 Company Information:
    br
    .row
      .col-md-6
        .form-group
            = f.label :email, 'Email', class: 'required'
            = f.text_field :email, class: 'form-control', required: true, value: user.email
      .col-md-6
        .form-group
          = f.label :company, 'Company Name', class: 'required'
          = f.text_field :company, class: 'form-control', required: true, value: user.company

    .row
      .col-md-6
        .form-group
            = f.label :company_phone, 'Phone', class: 'required'
            = f.telephone_field :company_phone, class: 'form-control', data: { behavior: 'IntlPhone' }, required: true, value: user.phone

    .row
      .col-md-6
        .form-group
          .offer-item
            .offer-date
              label Company Formation Date:
              = date_select :fly_buy_profile, :date_of_company, { start_year: 20.years.ago.year, end_year: Date.today.year, order: [:month, :day, :year]}, { class: 'form-control' }

      /! 'Outside the United States?' option temporarily closed
      /! because of WIRE-INT node not subscribed for ToadLane
      /!.col-md-6
        .form-group
          .offer-item
            .offer-date
              = label_tag 'outside_the_us', 'Outside the United States?:'
              = f.check_box :outside_the_us, data: { behavior: 'CheckOutsideUS' }

    .row
      .col-md-6
        .form-group
            = f.label :tin_number, 'EIN Number:', class: 'required'
            = f.text_field :tin_number, class: 'form-control', value: fly_buy_profile.masked_tin_number, required: true, placeholder: '77772222', disabled: company_doc_verified
      .col-md-6.hide
        .form-group
            = label_tag 'country_name', 'What country are you from?:', class: 'required'
            = country_select 'country', 'name', ['US', 'GB'], { iso_codes: true, include_blank: 'Select a country' }, { class: 'form-control', id: 'fly_buy_profile_country', required: true }

    .row
      .col-md-6
        .form-group
          = f.label :entity_type, 'Entity Type:', class: 'required'
          = f.select :entity_type, company_entity_types, { prompt: 'Please select an Entity Type' }, class: 'form-control', required: true
      .col-md-6
        .form-group
          = f.label :entity_scope, 'Entity Scope:', class: 'required'
          = f.select :entity_scope, company_entity_scopes, {prompt: 'Please select an Entity Scope'}, class: 'form-control', required: true
    hr

- unless user_doc_verified
  .userInformation class="#{show_user_doc}"
    h4 User Information:
    br
    .row
      .col-md-6
        .form-group
          .offer-item
            .offer-date
              label Your date of birth:
              = date_select :fly_buy_profile, :dob, { start_year: 60.year.ago.year, end_year: Date.today.year, order: [:month, :day, :year] }, { class: 'form-control' }
      .col-md-6
        .form-group
          .profileType
            .first
              = f.label :ssn_number, 'SOCIAL SECURITY NUMBER:', class: 'required'
              = f.text_field :ssn_number, class: 'form-control', value: fly_buy_profile.masked_ssn_number, required: true, placeholder: '77772222'
            .second
              = link_to toadlane_trust_path, title: 'Why do we need this?', target: :_blank
                span
                  .info-btn
                    i.fa.fa-question-circle
            .clearfix

    .row
      .col-md-6
        .form-group
          = f.label :gender, 'Entity Type:', class: 'required'
          = f.select :gender, user_entity_types, { prompt: 'Please select an Entity Type' }, class: 'form-control', required: true
    .row  
      .col-md-12
        .div
          .p I certify, under penalty of perjury that:
          .ol
            .li 1.) The Taxpayer Identification Number or Social Security Number I provided is correct;
            .li 2.) I am not subject to backup withholding because: (a) I am exempt from backup withholding, or (b) I have not been notified by the Internal Revenue Service (IRS) that I am subject to backup withholding as a result of a failure to report all interest or dividends, or (c) the IRS has notified me that I am no longer subject to backup withholding; and
            .li 3.) I am a U.S. citizen or other U.S. person; and
            .li 4.) The FATCA code(s) entered (if any) indicating that I am exempt from FATCA reporting is correct.
        .p
        .p The Internal Revenue Service does not require your consent to any provision of this document other than the certifications required to avoid backup withholding.
        .form-group
          = f.label :ssn_agreement, 'I certify:', class: 'required'
          = f.check_box :ssn_agreement, required: true
    hr

.flybuy-address-block
  .row
    - address = Address.where(user: user).order('created_at')
    - display_address_btn = address.present? ? 'show' : 'hide'
    - display_address = address.present? ? 'hide' : 'show'

    .col-md-8
      table
        thead
          tr
            th
              h4 Address:
        tbody
          = f.collection_radio_buttons(:address_id, address, :id, :get_inline_address) do |b, index|
            tr
              td
                = b.label { b.radio_button(:"checked" => (b.object.id == address.first.id), class: 'fly-buy-profile-address') + b.text }
      br
      .text-left
        button.btn.btn-success.show-address-block-button class="#{display_address_btn}" = fa_icon 'plus', text: 'ADD ANOTHER ADDRESS'
    .clearfix
    br

    .insert-new-address-block class="#{display_address}"
      - address_count = (address.count + 1).to_s
      = f.fields_for :addresses do |ff|
        - if ff.index == 0
          i Default Address
        .col-md-6
          .form-group
            = ff.label :name, 'Address Name:', class: 'required'
            = ff.text_field :name, class: 'form-control', required: true, name: 'fly_buy_profile[address_attributes]['+ address_count  +'][name]', id: 'fly_buy_profile[address_attributes]['+ address_count  +'][name]'
          .form-group
            = ff.label :line1, 'Address Line 1:', class: 'required'
            = ff.text_field :line1, class: 'form-control', required: true, name: 'fly_buy_profile[address_attributes]['+ address_count +'][line1]', id: 'fly_buy_profile[address_attributes]['+ address_count +'][line1]'
          .form-group
            = ff.label :city, 'City:', class: 'required'
            = ff.text_field :city, class: 'form-control', required: true, name: 'fly_buy_profile[address_attributes]['+ address_count +'][city]', id: 'fly_buy_profile[address_attributes]['+ address_count +'][city]'
        .col-md-6
          .form-group
            = ff.label :state, 'State:', class: 'required'
            = ff.text_field :state, class: 'form-control', required: true, name: 'fly_buy_profile[address_attributes]['+ address_count +'][state]', id: 'fly_buy_profile[address_attributes]['+ address_count +'][state]'
          .form-group
            = ff.label :zip, 'Postal Code:', class: 'required'
            = ff.text_field :zip, class: 'form-control', required: true, name: 'fly_buy_profile[address_attributes]['+ address_count +'][zip]', id: 'fly_buy_profile[address_attributes]['+ address_count +'][zip]'
          .form-group
            = ff.label :country, 'Country:', class: 'required'
            = ff.country_select 'country', ['US', 'GB'], { iso_codes: true, include_blank: 'Select a country' }, { name: "fly_buy_profile[address_attributes][#{address_count}][country]", required: true, id: "fly_buy_profile_address_attributes_#{address_count}_country", class: 'form-control fly-buy-profile-address-country' }
  hr

- unless company_doc_verified
  .companyDocuments
    h4 Company Documents:
    br
    .row
      .col-md-6.physicalDocument
        .form-group
          = f.label :eic_attachment, 'EIN Document:', class: 'required'
          = link_to 'Lost your ein?', 'https://www.irs.gov/businesses/small-businesses-self-employed/lost-or-misplaced-your-ein', class: 'view', target: '_blank'
          = f.file_field :eic_attachment, required: true
          p.warning Format must be png, jpg, jpeg or pdf
      .col-md-6.physicalDocument class="#{show_user_doc}"
        .form-group
          = f.label :bank_statement, "#{physical_doc_text}", class: 'required'
          = f.file_field :bank_statement, required: true
          p.warning Format must be png, jpg, jpeg or pdf
    hr

- unless user_doc_verified
  .userDocuments class="#{show_user_doc}"
    h4 User Documents:
    br
    .row
      .col-md-12.physicalDocument
        .form-group
          = f.label :gov_id, 'Government Issued ID:', class: 'required'
          = f.file_field :gov_id, required: true
          p.warning
            | User's government issued photo ID (driver's license, state ID, or passport).
          p.warning
            |  Format must be png, jpg or jpeg
    hr

- unless user_bank_details_verified
  .bankAccountVerification
    h4 Bank Account Verification:
    p.warning This is the account you use to send and receive funds with Fly & Buy
    br
    .row
      .col-md-6
        .form-group
          = f.label :bank_name, 'Bank Name:', class: 'required'
          = f.text_field :bank_name, class: 'form-control', required: true
      .col-md-6
        .form-group
          = f.label :address, 'Bank Address:', class: 'required'
          = f.text_field :address, class: 'form-control', required: true

    .row
      .col-md-6
        .form-group
          = f.label :name_on_account, 'Account Name:', class: 'required'
          = f.text_field :name_on_account, class: 'form-control', required: true
      .col-md-6
        .form-group
          = f.label :account_num, 'Account Number:', class: 'required'
          = f.text_field :account_num, class: 'form-control', required: true

    .row
      .col-md-6
        .form-group
          = f.label :routing_num, 'Routing Number:', class: 'required'
          = f.text_field :routing_num, class: 'form-control', required: true
      .col-md-6 class="#{show_swift_code}"
        .form-group
          = f.label :additional_information, 'Swift Code:', class: 'required'
          = f.text_field :additional_information, class: 'form-control', required: true
    hr

.row
  .form-group
    .checkbox: label
      = f.check_box :terms_of_service, required: true
      | &nbsp;By creating this account you agree to our Terms of Service & Privacy Policy and our financial software partner SynapsePay’s <a href="https://synapsepay.com/legal" target="_BLANK"> Terms of Service & Privacy Policy</a>

= f.submit 'Submit', class: 'btn btn-primary create_fly_buy_submit_btn'

= form_for [:dashboard, @product], :html => { multipart: true } do |f|
  .wrap-sm: .product-form
    - if @product.errors.any?
      .error-explanation
        h5= "#{pluralize(@product.errors.count, "error")} prohibited this test from being saved:"
        ul
          - @product.errors.full_messages.each do |message|
            li = message

    table: tr
      td
        .form-group
          = f.label :name, 'Product name:', class: 'required'
          = f.text_field :name, class: 'form-control'

        .form-group
          = f.label :slug, 'Slug:'
          = f.text_field :slug, class: 'form-control'

        .form-group
          = f.label :sku, 'Product sku:'
          = f.text_field :sku, class: 'form-control'

        .form-group
          = f.label :main_category, 'Main category:', class: 'required'
          = f.select :main_category, options_from_collection_for_select(main_categories, :id, :name, f.object.main_category), {}, data: { behavior: 'Select', subcategory: '#sub_categories' }, placeholder: 'Select the main category...'

        .form-group
          label Additional categories:
          select#sub_categories name="product[product_categories_attributes][]" placeholder="Select the sub category..." style="display:none" multiple="true"
            - @product.categories.each do |category|
              option value="#{category.id}" selected=""= category.name

        .form-group
          = f.label :description, 'Description:'
          = f.text_area :description, class: 'form-control', placeholder: 'Write something about your product...', maxlength: '1000'

      td
        .clearfix
          .unit
            = f.label :unit_price, 'Retail price:', class: 'required'
            = f.number_field :unit_price, class: 'form-control'

          .tax
            = f.label :tax_id, 'Tax level:', class: 'required'
            = f.select :tax_id, options_from_collection_for_select(taxes, :id, :value, @product.tax_id), {}, data: { behavior: 'Select' }

          .status_action
            = f.label :status_characteristic, 'I am:', class: 'required'
            = f.select :status_characteristic, [['Selling', 'sell'], ['Buying', 'buy']], {}, data: { behavior: 'Select' }

          .status
            = f.label :status, 'Product status:'
            .checkbox: label
              = f.check_box :status
              | Is Active

        label Photos:
        .product-form-photos data-behavior="UploadImages" data-options='{"template":"#template-select-image","btnAdd":"#add_photo","deleteImage":".delete-image"}'
          - if @product.images.present?
            - @product.images.each do |item|
              .item: .photo
                .image-tag style="background:url(#{item.image(:small)})"
                a.delete-image= fa_icon 'trash-o', text: 'Delete'
                input name="product[images_attributes_delete][]" type="checkbox" value="#{item.id}"

            - if 8 - @product.images.count > 0
              - (1..8-@product.images.count).each do
                .item.new
                  .photo
                    a.delete-image= fa_icon 'trash-o', text: 'Delete'
                  .select
                    span Select photo
                    input type="file" name="product[images_attributes][]" accept="image/*"

          - else
            - (1..8).each do
              .item.new
                .photo
                  a.delete-image= fa_icon 'trash-o', text: 'Delete'
                .select
                  span Select photo
                  input type="file" name="product[images_attributes][]" accept="image/*"

        .clearfix
          #add_photo.btn.btn-primary Add photo item
          span.photo-ex Supported extensions: jpg, png, gif.<br>Max. upload file size 25MB.

        script#template-select-image type="text/template"
          .item.new
            .photo
              a.delete-image= fa_icon 'trash-o', text: 'Delete'
            .select
              span Select photo
              input type="file" name="product[images_attributes][]" accept="image/*"

    hr

    table: tr
      td
        .offer-item
          label.lg.required OFFER valid from:

          .offer-date
            label Date:
            = date_select :product, :start_date, { order: [:day, :month, :year] }, { data: { behavior: 'Select', options: '{"sortField":"$score"}' } }

          .offer-time
            label Time:
            = time_select :product, :start_date, { ignore_date: true, minute_step: 10 }, { data: { behavior: 'Select' } }

        .offer-item
          label.lg.required OFFER valid until:

          .offer-date
            label Date:
            = date_select :product, :end_date, { order: [:day, :month, :year] }, { data: { behavior: 'Select', options: '{"sortField":"$score"}' } }

          .offer-time
            label Time:
            = time_select :product, :end_date, { ignore_date: true, minute_step: 10 }, { data: { behavior: 'Select' } }

      td
        .amount-soldout
          = f.label :amount, 'Amount:', class: 'lg required'
          = f.text_field :amount, class: 'form-control'

        .amount-soldout
          = f.label :sold_out, 'Bought:', class: 'lg'
          = f.text_field :sold_out, class: 'form-control'

        .dimensions
          label.lg dimensions:
          .dimensions-fields
            div
              = f.label :dimension_width, 'Width:'
              = f.text_field :dimension_width, class: 'form-control'
            div
              = f.label :dimension_height, 'Height:'
              = f.text_field :dimension_height, class: 'form-control'
            div
              = f.label :dimension_depth, 'Depth:'
              = f.text_field :dimension_depth, class: 'form-control'
            div
              = f.label :dimension_weight, 'Weight:'
              = f.text_field :dimension_weight, class: 'form-control'

    hr

    label.lg Pricebreaks:
    ul.pricebreaks
      - if @product.pricebreaks.any?
        - @product.pricebreaks.each_with_index do |pb, index|
          li.pricebreak
            .index= index+1
            .form-group
              label Price:
              input.form-control type="text" name="product[pricebreaks_attributes][][price]" value="#{number_with_precision(pb.price, precision: 0, delimiter: '')}"

            .form-group
              label Quantity:
              input.form-control type="number" name="product[pricebreaks_attributes][][quantity]" value="#{pb.quantity}"

            input type="hidden" name="product[pricebreaks_attributes][][id]" value="#{pb.id}"

            span.btn.btn-default.remove= fa_icon 'trash-o'
            .hide: input type="checkbox" name="product[pricebreaks_delete][]" value="#{pb.id}"

      - else
        li.pricebreak
          .index 1
          .form-group
            label Price:
            input.form-control type="text" name="product[pricebreaks_attributes][][price]"

          .form-group
            label Quantity:
            input.form-control type="number" name="product[pricebreaks_attributes][][quantity]"

          span.btn.btn-default.remove= fa_icon 'trash-o'

      li.add-pricebreak data-behavior="PriceBreaks"= fa_icon 'plus', text: 'Add another Product Price'

    script#template-pricebreak type="text/template"
      li.pricebreak
        .index 2
        .form-group
          label Price:
          input.form-control type="text" name="product[pricebreaks_attributes][][price]"

        .form-group
          label Quantity:
          input.form-control type="number" name="product[pricebreaks_attributes][][quantity]"

        span.btn.btn-default.remove= fa_icon 'trash-o'

  .footer-actions: .fa-container: .wrap-sm
    = f.button fa_icon('check', text: 'Save & close'), value: 'close', class: 'btn btn-success pull-right'
    = f.button fa_icon('save', text: 'Save & add new'), value: 'new', class: 'btn btn-default pull-right'
    = f.button fa_icon('plus', text: 'Save & stay edit'), value: 'edit', class: 'btn btn-default pull-right'
    = link_to fa_icon('trash-o', text: 'Delete this product'), dashboard_product_path(@product.id), method: :delete, data: { confirm: 'Are you sure?' }, class: 'btn btn-default pull-left' if @product.id?

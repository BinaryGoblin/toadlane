= render 'admin/users/tabs'

.wrap-sm
  
  h4.warning
    |
      ***Warning! These are global level user permissions. Adjust with caution.
  br
  
  .table-responsive
    table.table
      thead
        tr
          th ID
          th Name
          th Company
          th Sign-Ins
          th Last Sign-In
          th Terms Accepted
          th User Role
          th 

      tbody
        - @users.each do |user|
          tr
            td = user.id
            td = user.name
            td = user.company
            td = user.sign_in_count
            -if user.last_sign_in_at
              td #{user.last_sign_in_at.strftime('%m-%d-%Y')}
            -else
              td Never
            -if user.terms_accepted_at
              td #{user.terms_accepted_at.strftime('%m-%d-%Y')}
            -else
              td Never
            - if user.has_role? :superadmin
              td Super Admin
            - else 
              -if user.has_role? :admin
                td Admin
              - else
                - if user.has_role? :user
                  td User
                - else
                  td Deactivated
            td
              - if user.has_role? :admin
                = link_to 'Promote', promote_admin_users_managements_path(id: user.id), method: 'put', data: { confirm: 'Are you sure? This will grant global administrative access.' }
              - else
                = link_to 'Promote', promote_admin_users_managements_path(id: user.id), method: 'put', data: { confirm: 'Are you sure? This will grant the user access to the administrative interface.' }
              |  | 
              - if user.has_role? :superadmin
                = link_to 'Demote', demote_admin_users_managements_path(id: user.id), method: 'put', data: { confirm: 'Are you sure? This will remove global administrative access.' }
              - else
                = link_to 'Demote', demote_admin_users_managements_path(id: user.id), method: 'put', data: { confirm: 'Are you sure? This will remove all access to the administrative interface.' }
              |  | 
              - if user.has_role? :user
                = link_to 'Deactivate', deactivate_admin_users_managements_path(id: user.id), method: 'put', data: { confirm: 'Are you sure? This will prevent the user from making purchases, posting listings, and sending messages.' }
              - else
                = link_to 'Activate', activate_admin_users_managements_path(id: user.id), method: 'put', data: { confirm: 'Are you sure? This will allow the user to make purchases, post listings, and send messages.' }
          
.footer-actions: .fa-container: .wrap-sm
  .show_all style="font-size:14px;padding-top:8px"
    | #{@users.count} Users 
    - unless params[:count].present? || @users.count < 20
      = link_to 'Show all', admin_users_managements_path(count: @users.count), class: 'link link-ulined'

  = will_paginate @users